// <auto-generated />
using DOTNET_Final_Case_BackEnd.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DOTNET_Final_Case_BackEnd.Migrations
{
    [DbContext(typeof(ProjectsDbContext))]
    partial class ProjectsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DOTNET_Final_Case_BackEnd.Models.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("MessageId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Message");

                    b.HasData(
                        new
                        {
                            MessageId = 1,
                            Description = "Hello World",
                            ProjectId = 1,
                            UserId = 2
                        },
                        new
                        {
                            MessageId = 2,
                            Description = "Hiiiiiiiii",
                            ProjectId = 1,
                            UserId = 1
                        },
                        new
                        {
                            MessageId = 3,
                            Description = "It is finished",
                            ProjectId = 2,
                            UserId = 3
                        },
                        new
                        {
                            MessageId = 4,
                            Description = "Well Done!",
                            ProjectId = 1,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("DOTNET_Final_Case_BackEnd.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Industry")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Link")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Photo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Progress")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Screen")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Theme")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("ProjectId");

                    b.ToTable("Project");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            Description = ".NET is an open source platform",
                            Theme = "IT",
                            Title = "The world of .NET"
                        },
                        new
                        {
                            ProjectId = 2,
                            Description = "Java is an open source programming language",
                            Theme = "IT",
                            Title = "Java"
                        },
                        new
                        {
                            ProjectId = 3,
                            Description = "C# an open source programming language",
                            Theme = "IT",
                            Title = "C#"
                        });
                });

            modelBuilder.Entity("DOTNET_Final_Case_BackEnd.Models.ProjectUser", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsOwner")
                        .HasColumnType("bit");

                    b.HasKey("ProjectId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("ProjectUser");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            UserId = 2,
                            IsOwner = false
                        },
                        new
                        {
                            ProjectId = 2,
                            UserId = 1,
                            IsOwner = false
                        });
                });

            modelBuilder.Entity("DOTNET_Final_Case_BackEnd.Models.Skill", b =>
                {
                    b.Property<int>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SkillId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("SkillId");

                    b.ToTable("Skill");

                    b.HasData(
                        new
                        {
                            SkillId = 1,
                            Name = "C#"
                        },
                        new
                        {
                            SkillId = 2,
                            Name = "Java"
                        },
                        new
                        {
                            SkillId = 3,
                            Name = "html"
                        });
                });

            modelBuilder.Entity("DOTNET_Final_Case_BackEnd.Models.SkillProject", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.HasKey("ProjectId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("SkillProject");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            SkillId = 1
                        },
                        new
                        {
                            ProjectId = 2,
                            SkillId = 2
                        });
                });

            modelBuilder.Entity("DOTNET_Final_Case_BackEnd.Models.SkillUser", b =>
                {
                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SkillId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("SkillsUser");

                    b.HasData(
                        new
                        {
                            SkillId = 1,
                            UserId = 2
                        },
                        new
                        {
                            SkillId = 1,
                            UserId = 1
                        },
                        new
                        {
                            SkillId = 3,
                            UserId = 4
                        },
                        new
                        {
                            SkillId = 2,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("DOTNET_Final_Case_BackEnd.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Hidden")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Portfolio")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("UserId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "leroy.finalcase@hotmail.com",
                            Hidden = false,
                            Name = "Leroy",
                            Password = "admin"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "dorine.finalcase@hotmail.com",
                            Hidden = false,
                            Name = "Dorine",
                            Password = "admin"
                        },
                        new
                        {
                            UserId = 3,
                            Email = "pim.finalcase@hotmail.com",
                            Hidden = false,
                            Name = "Pim",
                            Password = "admin"
                        },
                        new
                        {
                            UserId = 4,
                            Email = "victor.finalcase@hotmail.com",
                            Hidden = false,
                            Name = "Victor",
                            Password = "admin"
                        });
                });

            modelBuilder.Entity("DOTNET_Final_Case_BackEnd.Models.Message", b =>
                {
                    b.HasOne("DOTNET_Final_Case_BackEnd.Models.Project", null)
                        .WithMany("Message")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DOTNET_Final_Case_BackEnd.Models.User", null)
                        .WithMany("Message")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DOTNET_Final_Case_BackEnd.Models.ProjectUser", b =>
                {
                    b.HasOne("DOTNET_Final_Case_BackEnd.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DOTNET_Final_Case_BackEnd.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DOTNET_Final_Case_BackEnd.Models.SkillProject", b =>
                {
                    b.HasOne("DOTNET_Final_Case_BackEnd.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DOTNET_Final_Case_BackEnd.Models.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("DOTNET_Final_Case_BackEnd.Models.SkillUser", b =>
                {
                    b.HasOne("DOTNET_Final_Case_BackEnd.Models.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DOTNET_Final_Case_BackEnd.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DOTNET_Final_Case_BackEnd.Models.Project", b =>
                {
                    b.Navigation("Message");
                });

            modelBuilder.Entity("DOTNET_Final_Case_BackEnd.Models.User", b =>
                {
                    b.Navigation("Message");
                });
#pragma warning restore 612, 618
        }
    }
}
